From ef8109a0bac4da5a3902afbe8fc5f740533613c5 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Thu, 14 Sep 2017 12:53:14 +0200
Subject: [PATCH 2/2] Revert "Use AOSP version of gralloc.h"

This reverts commit 0379b04e012b491ee87df9d129cc80f203dfb787.
---
 git/hardware/gralloc.h | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/git/hardware/gralloc.h b/git/hardware/gralloc.h
index 7d00114..34938d6 100644
--- a/git/hardware/gralloc.h
+++ b/git/hardware/gralloc.h
@@ -133,6 +133,19 @@ enum {
     GRALLOC_USAGE_PRIVATE_2             = 0x40000000,
     GRALLOC_USAGE_PRIVATE_3             = 0x80000000,
     GRALLOC_USAGE_PRIVATE_MASK          = 0xF0000000,
+
+#ifdef EXYNOS4_ENHANCEMENTS
+    /* SAMSUNG */
+    GRALLOC_USAGE_PRIVATE_NONECACHE     = 0x00800000,
+
+    GRALLOC_USAGE_HW_FIMC1              = 0x01000000,
+    GRALLOC_USAGE_HW_ION                = 0x02000000,
+    GRALLOC_USAGE_YUV_ADDR              = 0x04000000,
+    GRALLOC_USAGE_CAMERA                = 0x08000000,
+
+    /* SEC Private usage , for Overlay path at HWC */
+    GRALLOC_USAGE_HWC_HWOVERLAY         = 0x20000000,
+#endif
 };
 
 /*****************************************************************************/
@@ -227,6 +240,10 @@ typedef struct gralloc_module_t {
     int (*unlock)(struct gralloc_module_t const* module,
             buffer_handle_t handle);
 
+#ifdef EXYNOS4_ENHANCEMENTS
+    int (*getphys) (struct gralloc_module_t const* module,
+            buffer_handle_t handle, void** paddr);
+#endif
 
     /* reserved for future use */
     int (*perform)(struct gralloc_module_t const* module,
@@ -316,6 +333,21 @@ typedef struct gralloc_module_t {
 typedef struct alloc_device_t {
     struct hw_device_t common;
 
+#ifdef QCOM_BSP
+    /*
+     * (*allocSize)() Allocates a buffer in graphic memory with the requested
+     * bufferSize parameter and returns a buffer_handle_t and the stride in
+     * pixels to allow the implementation to satisfy hardware constraints on
+     * the width of a pixmap (eg: it may have to be multiple of 8 pixels).
+     * The CALLER TAKES OWNERSHIP of the buffer_handle_t.
+     *
+     * Returns 0 on success or -errno on error.
+     */
+    int (*allocSize)(struct alloc_device_t* dev,
+            int w, int h, int format, int usage,
+            buffer_handle_t* handle, int* stride, int bufferSize);
+#endif
+
     /* 
      * (*alloc)() Allocates a buffer in graphic memory with the requested
      * parameters and returns a buffer_handle_t and the stride in pixels to
-- 
2.10.1.windows.1

